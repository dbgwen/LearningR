CONTROL STRUCTURES

 ## If-Else

      if(<condition>) {
           ## do something
      }
      else {
            ## do something else
      }

      if(<condition1>) {
            ## do something
      } else if(<condition2>) {
            ## do something different
      } else {
            ## do something different
      }
      
      **Generate a uniform random number
      x <- runif(1, 0, 10)
      if(x > 3) {
              y <- 10
      } else {
              y <- 0
      }
      
 ## for loops
 
      numbers <- rnorm(10)
      for(i in 1:10) {
              print(numbers[i])
      }
      
      x <- c("a", "b", "c", "d")

      for(i in 1:4) {
        ## Print out each element of 'x'
        print(x[i])  
        }
        
        ## Generate a sequence based on length of 'x'
      for(i in seq_along(x)) {   
                print(x[i])
        }
    
   ## Nested Loops
    
        x <- matrix(1:6, 2, 3)

        for(i in seq_len(nrow(x))) {
            for(j in seq_len(ncol(x))) {
                    print(x[i, j])
            }   
          }
     
    ## Next to skip iterations
    
          for(i in 1:100) {
          if(i <= 20) {
                  ## Skip the first 20 iterations
                  next                 
          }
          ## Do something here
          }
      
    ## Break is used to exit a loop
    
         for(i in 1:100) {
          print(i)

          if(i > 20) {
                  ## Stop loop after 20 iterations
                  break  
          }     
           }
           
 FUNCTIONS
Functions are used to encapsulate a sequence of expressions that are executed together to achieve a specific goal. A single function typically does "one thing well"---often taking some input and the generating output that can potentially be handed off to another function for further processing. 

            # Examples
                        library(readr)
                        library(dplyr)

                        ## Download data from RStudio (if we haven't already)
                        if(!file.exists("data/2016-07-20.csv.gz")) {
                                download.file("http://cran-logs.rstudio.com/2016/2016-07-20.csv.gz", 
                                              "data/2016-07-20.csv.gz")
                        }
                        cran <- read_csv("data/2016-07-20.csv.gz", col_types = "ccicccccci")
                        cran %>% filter(package == "filehash") %>% nrow
                        
                        
                        library(dplyr)
                        library(readr)

                        ## pkgname: package name (character)
                        ## date: YYYY-MM-DD format (character)
                        num_download <- function(pkgname, date) {
                                ## Construct web URL
                                year <- substr(date, 1, 4)
                                src <- sprintf("http://cran-logs.rstudio.com/%s/%s.csv.gz",
                                               year, date)

                                ## Construct path for storing local file
                                dest <- file.path("data", basename(src))

                                ## Don't download if the file is already there!
                                if(!file.exists(dest))
                                        download.file(src, dest, quiet = TRUE)

                                cran <- read_csv(dest, col_types = "ccicccccci", progress = FALSE)
                                cran %>% filter(package == pkgname) %>% nrow
                                    }
                                    
                         ## Revised Function
                                    num_download <- function(pkgname, date = "2016-07-20") {
                                      year <- substr(date, 1, 4)
                                      src <- sprintf("http://cran-logs.rstudio.com/%s/%s.csv.gz",
                                                     year, date)
                                      dest <- file.path("data", basename(src))
                                      if(!file.exists(dest))
                                              download.file(src, dest, quiet = TRUE)
                                      cran <- read_csv(dest, col_types = "ccicccccci", progress = FALSE)
                                      cran %>% filter(package == pkgname) %>% nrow
                                          }
                          ## Function to check that packages are installed
                          
                                    check_pkg_deps <- function() {
                                    if(!require(readr)) {
                                        message("installing the 'readr' package")
                                        install.packages("readr")
                                                              }
                                                              if(!require(dplyr))
                                                                      stop("the 'dplyr' package needs to be installed first")
                                                      }
                                  ## Checks for dependencies
                                          num_download <- function(pkgname, date = "2016-07-20") {
                                            check_pkg_deps()
                                            dest <- check_for_logfile(date)
                                            cran <- read_csv(dest, col_types = "ccicccccci", progress = FALSE)
                                            cran %>% filter(package == pkgname) %>% nrow
                                                            }
                                                            
                                   ## Add Vectorization
                                            ## 'pkgname' can now be a character vector of names
                                                num_download <- function(pkgname, date = "2016-07-20") {
                                                        check_pkg_deps()
                                                        dest <- check_for_logfile(date)
                                                        cran <- read_csv(dest, col_types = "ccicccccci", progress = FALSE)
                                                        cran %>% filter(package %in% pkgname) %>% 
                                                                group_by(package) %>%
                                                                summarize(n = n())
                                                                   } 
                                                                   
                                    
                          
                           
      
      
      
        
